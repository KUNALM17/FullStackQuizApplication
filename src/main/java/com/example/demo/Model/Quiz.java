package com.example.demo.Model;

import java.util.List;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import lombok.Data;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;

/**
 * 🎯 Quiz Entity - The Collection of Questions That Make a Challenge!
 * 
 * Think of a Quiz as a question paper or test that contains multiple questions.
 * It's like creating a custom playlist, but instead of songs, we're collecting questions!
 * 
 * For example:
 * - Quiz Title: "Java Basics Challenge"
 * - Contains: 10 random Java questions
 * - Users take this quiz and get scored based on correct answers
 * 
 * The magic happens with @ManyToMany relationship:
 * - One quiz can have many questions
 * - One question can be part of many different quizzes
 * - Database creates a "quiz_question" table to link them together
 * 
 * @author KUNAL M
 * @version 1.0
 */
@Entity
@Data
public class Quiz {
	
	/** 🆔 Unique identifier for each quiz - like a quiz's ID card! */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	/** 📝 The name/title of the quiz (e.g., "Java Expert Challenge") */
	private String title; 

	/**
	 * 📚 The collection of questions that make up this quiz
	 * 
	 * @ManyToMany creates a flexible relationship where:
	 * - This quiz can contain multiple questions
	 * - Same questions can appear in different quizzes
	 * - Database automatically manages the relationship through "quiz_question" table
	 */
    @ManyToMany
    @JoinTable(
            name = "quiz_question",
            joinColumns = @JoinColumn(name = "quiz_id"),
            inverseJoinColumns = @JoinColumn(name = "question_id")
    )
    private List<Question> questions;

    // 🔧 Getters and Setters (automatically generated by @Data, but included for clarity)
    
	public int getId() {
		return id;
	}
	
	public void setId(int id) {
		this.id = id;
	}
	
	public String getTitle() {
		return title;
	}
	
	public void setTitle(String title) {
		this.title = title;
	}
	
	public List<Question> getQuestions() {
		return questions;
	}
	
	public void setQuestions(List<Question> questions) {
		this.questions = questions;
	}
}