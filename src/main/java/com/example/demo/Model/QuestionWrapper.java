package com.example.demo.Model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.Data;

/**
 * üé≠ QuestionWrapper - The Safe Version of Questions for Quiz Takers!
 * 
 * Think of this as a "censored" version of the Question model.
 * It's like showing someone a multiple-choice question WITHOUT revealing the correct answer!
 * 
 * Why do we need this?
 * - When users take a quiz, they should see the question and options
 * - But they should NOT see the correct answer (that would be cheating! üòÖ)
 * - This wrapper contains everything EXCEPT the right_answer field
 * 
 * It's like giving someone a test paper with questions and choices,
 * but keeping the answer sheet hidden until they submit their responses.
 * 
 * @author KUNAL M
 * @version 1.0
 */
@Entity
@Data
public class QuestionWrapper {
	
	/** üÜî Unique identifier matching the original question ID */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	/** ‚ùì The question text that users need to answer */
	private String question_title; 
	
	/** üÖ∞Ô∏è First option - could be the answer, could be a decoy! */
	private String option1;
	
	/** üÖ±Ô∏è Second option - mystery continues... */
	private String option2;
	
	/** üÖ≤ Third option - getting warmer? */
	private String option3;
	
	/** üÖ≥ Fourth option - one of these is correct! */
	private String option4;
	
	// üîß Getters and Setters (automatically generated by @Data)
	
	public int getId() {
		return id;
	}
	
	public void setId(int id) {
		this.id = id;
	}
	
	public String getQuestion_title() {
		return question_title;
	}
	
	public void setQuestion_title(String question_title) {
		this.question_title = question_title;
	}
	
	public String getOption1() {
		return option1;
	}
	
	public void setOption1(String option1) {
		this.option1 = option1;
	}
	
	public String getOption2() {
		return option2;
	}
	
	public void setOption2(String option2) {
		this.option2 = option2;
	}
	
	public String getOption3() {
		return option3;
	}
	
	public void setOption3(String option3) {
		this.option3 = option3;
	}
	
	public String getOption4() {
		return option4;
	}
	
	public void setOption4(String option4) {
		this.option4 = option4;
	}
	
	/**
	 * üèóÔ∏è Constructor to create a QuestionWrapper from a complete Question
	 * 
	 * This is like taking a full question and creating a "quiz-safe" version
	 * by copying everything except the answer!
	 */
	public QuestionWrapper(int id, String question_title, String option1, String option2, String option3, String option4) {
		super();
		this.id = id;
		this.question_title = question_title;
		this.option1 = option1;
		this.option2 = option2;
		this.option3 = option3;
		this.option4 = option4;
	}
}
